{"version":3,"sources":["js/03-promises.js"],"names":["refs","form","document","querySelector","onSubForm","event","preventDefault","inputRefs","currentTarget","elements","delayValue","delay","value","stepValue","step","amountValue","amount","totalDelay","Number","i","createPromise","then","position","console","log","catch","Promise","resolve","reject","setTimeout","Math","random","addEventListener"],"mappings":";AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,UAK/B,SAASC,EAAUC,GACjBA,EAAMC,iBACAC,MAAAA,EAAYF,EAAMG,cAAcC,SAChCC,EAAaH,EAAUI,MAAMC,MAC7BC,EAAYN,EAAUO,KAAKF,MAC3BG,EAAcR,EAAUS,OAAOJ,MAEjCK,IAAAA,EAAaC,OAAOR,GAEnB,IAAA,IAAIS,EAAI,EAAGA,GAAKD,OAAOH,GAAcI,GAAK,EACnC,IAANA,IACFF,GAAcC,OAAOL,IAEvBO,EAAcD,EAAGF,GACdI,KAAK,EAAGC,SAAAA,EAAUX,MAAAA,MACjBY,QAAQC,2BAA2BF,QAAeX,SAEnDc,MAAM,EAAGH,SAAAA,EAAUX,MAAAA,MAClBY,QAAQC,0BAA0BF,QAAeX,SAKzD,SAASS,EAAcE,EAAUX,GACxB,OAAA,IAAIe,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEL,SAAAA,EAAUX,MAAAA,IAEpBiB,EAAO,CAAEN,SAAAA,EAAUX,MAAAA,KAEpBA,KAnCPX,EAAKC,KAAK+B,iBAAiB,SAAU5B","file":"03-promises.56d4395a.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onSubForm);\n\nfunction onSubForm(event) {\n  event.preventDefault();\n  const inputRefs = event.currentTarget.elements;\n  const delayValue = inputRefs.delay.value;\n  const stepValue = inputRefs.step.value;\n  const amountValue = inputRefs.amount.value;\n\n  let totalDelay = Number(delayValue);\n\n  for (let i = 1; i <= Number(amountValue); i += 1) {\n    if (i !== 1) {\n      totalDelay += Number(stepValue);\n    }\n    createPromise(i, totalDelay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"]}